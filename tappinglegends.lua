repeat task.wait() until game:IsLoaded()
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/GSstarGamer/GUI/main/Mercury-edit.lua"))()



local GUI = Library:Create{
    Name = "Rionnag Hub",
    Size = UDim2.fromOffset(600, 500),
    Theme = Library.Themes.GStheme,
    Link = "rionnag.xyz"
}

GUI:Credit{
    Name = "GS_StarGamer",
    Description = "Made the script, also made the theme",
    V3rm = "https://v3rmillion.net/member.php?action=profile&uid=2560793",
    Discord = "GS_S.G#3838"
}

-- GUI:Credit{
--     Name = "x3Fall3nAngel",
--     Description = "Helped me",
--     V3rm = "https://v3rmillion.net/member.php?action=profile&uid=2270329",
--     Discord = "discord.gg/tbENWKpgku"
-- }

GUI:Notification{
    Title = "Hey!",
    Text = "Thank you for choosing FallAngle Hub, for more information click on the other tab.",
    Duration = 20,
    Callback = function() 
        game:IsLoaded()
    end
}

local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)

GUI:Notification{
	Title = "Note",
	Text = "Anti-AFK activated",
	Duration = 3,
	Callback = function() end
}



-- Farming tab
local farming = GUI:Tab{
	Name = "Farming",
	Icon = "rbxassetid://2174510075"
}




farming:Toggle{
	Name = "Auto click",
	StartingState = false,
	Description = nil,
	Callback = function(state) 
    getgenv().autofarm = state
    if autofarm == true then
        GUI:set_status("Status | Enabled")

    else
        GUI:set_status("Status | Idle") 
    end
    
    spawn(function()
        while autofarm == true do
            game:GetService("ReplicatedStorage").Remotes.Tap:FireServer()
            task.wait()
        end
    end)
    end
}

local rebirthval = nil

farming:Dropdown{
	Name = "Rebirth count",
	StartingText = "Select...",
	Description = "states of rebirth",
	Items = {
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43


	},
	Callback = function(v) 
        rebirthval = v
        print(rebirthval)
    end
}

farming:Toggle{
	Name = "Auto rebirth",
	StartingState = false,
	Description = nil,
	Callback = function(state) 
    getgenv().autorebirth = state
    
    if rebirthval == nil then
        GUI:Notification{
            Title = "Alert",
            Text = "You must select an rebirth val to loop it",
            Duration = 3,
            Callback = function() end
        }
    else
        spawn(function()
            while autorebirth==true do
                
                game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(rebirthval)
                task.wait()
        end    
        end)
    end

    end
}



-- upgrades

local upgrades = GUI:Tab{
	Name = "Upgrades ruby",
	Icon = "rbxassetid://8773648968"
}

upgrades:Button{
	Name = "Buy all upgrades",
	Description = "Buys ruby everything 1 time",
	Callback = function() 

    GUI:Notification{
        Title = "Alert",
        Text = "Buying all upgrades",
        Duration = 3,
        Callback = function() end
    }
    local upgrade = "Ruby"
    local a = "TapMultiplier"
    local b = "FreeAutoClicker"
    local c = "RebirthsUpgrade"
    local d = "PetStorage"
    local e = "WalkSpeed"
    local f = "CriticalChances"
    local g = "AchievementLuck"
    local h = "MaxCombo"
    local i = "AutoClickerMultiplier"

    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, a)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, b)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, c)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, d)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, e)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, f)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, g)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, h)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, i)
    GUI:Notification{
        Title = "Alert",
        Text = "Finished :D",
        Duration = 3,
        Callback = function() end
    }

    end
}

upgrades:Toggle{
	Name = "Auto buy all loop",
	StartingState = false,
	Description = "loop buys every shit",
	Callback = function(state) 
    getgenv().autoupgsp = state
    local upgrade = "Ruby"
    local a = "TapMultiplier"
    local b = "FreeAutoClicker"
    local c = "RebirthsUpgrade"
    local d = "PetStorage"
    local e = "WalkSpeed"
    local f = "CriticalChances"
    local g = "AchievementLuck"
    local h = "MaxCombo"
    local i = "AutoClickerMultiplier"
    local j = "ReEnchant"

    spawn(function ()
        while task.wait() do
            while autoupgsp == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, a)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgsp == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, b)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgsp == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, c)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgsp == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, d)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgsp == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, e)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgsp == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, f)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgsp == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, g)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgsp == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, h)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgsp == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, i)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgsp == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, j)
            end
        end
    end)
    end

}


local upgradesel = nil

upgrades:Dropdown{
	Name = "Upgrade to specific",
	StartingText = "Select...",
	Description = nil,
	Items = {
		{"Tap Multiplier", "TapMultiplier"},
		{"Free Auto-Clicker", "FreeAutoClicker"},
		{"Rebirths Upgrade", "RebirthsUpgrade"},
		{"Pet Storage", "PetStorage"},
		{"Walk Speed", "WalkSpeed"},
		{"Critical Chances", "CriticalChances"},
		{"Achievement Luck", "AchievementLuck"},
		{"Max Combo", "MaxCombo"},
		{"Auto Clicker Multiplier", "AutoClickerMultiplier"},
        {"Re Enchant", "ReEnchant"}
    },
	Callback = function(item)
    upgradesel = item
end
}

upgrades:Button{
	Name = "Buy specific",
	Description = "Buys specific upgrade once",
	Callback = function() 
        local upgrade = "Ruby"

        if upgradesel == nil then
            GUI:Notification{
                Title = "Alert",
                Text = "You must select an upgrade to buy",
                Duration = 3,
                Callback = function() end
            }
        else
            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, upgradesel)
        end
    end
}

upgrades:Toggle{
	Name = "Auto buy specific",
	StartingState = false,
	Description = nil,
	Callback = function(state) 
    getgenv().autoupgsp = state
    spawn(function()

        if upgradesel == nil then
            GUI:Notification{
                Title = "Alert",
                Text = "You must select an upgrade to loop buy",
                Duration = 3,
                Callback = function() end
            }
        else
            while autoupgsp == true do
                local upgrade = "Ruby"
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, upgradesel)
                task.wait()
        end
    end
    end)
    end
}

-- upgrades token

local upgrades1 = GUI:Tab{
	Name = "Upgrades token",
	Icon = "rbxassetid://9031128665"
}

upgrades1:Button{
	Name = "Buy all upgrades",
	Description = "Buys ruby everything 1 time",
	Callback = function() 

    GUI:Notification{
        Title = "Alert",
        Text = "Buying all upgrades",
        Duration = 3,
        Callback = function() end
    }
    local upgrade = "Tokens"
    local a = "TapDamage"
    local b = "PetsEquipped"
    local c = "GoldenChance"
    local d = "FasterEggs"
    local e = "MoreLuck"
    local f = "RainbowChance"
    local g = "RubyMultiplier"
    local h = "ChestChances"
    local i = "MaxPetLevel"
    local j = "MaxEnchant"

    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, a)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, b)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, c)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, d)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, e)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, f)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, g)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, h)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, i)
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, j)
    GUI:Notification{
        Title = "Alert",
        Text = "Finished :D",
        Duration = 3,
        Callback = function() end
    }

    end
}

upgrades1:Toggle{
	Name = "Auto buy all loop",
	StartingState = false,
	Description = "loop buys every shit",
	Callback = function(state) 
    getgenv().autoupgspt = state
    local upgrade = "Tokens"
    local a = "TapDamage"
    local b = "PetsEquipped"
    local c = "GoldenChance"
    local d = "FasterEggs"
    local e = "MoreLuck"
    local f = "RainbowChance"
    local g = "RubyMultiplier"
    local h = "ChestChances"
    local i = "MaxPetLevel"
    local j = "MaxEnchant"

    spawn(function ()
        while task.wait() do
            while autoupgspt == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, a)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgspt == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, b)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgspt == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, c)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgspt == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, d)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgspt == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, e)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgspt == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, f)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgspt == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, g)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgspt == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, h)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgspt == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, i)
            end
        end
    end)
    
    spawn(function ()
        while task.wait() do
            while autoupgspt == true do
                game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, j)
            end
        end
    end)


    end

}

local upgrade1sel = nil

upgrades1:Dropdown{
	Name = "Upgrade to specific",
	StartingText = "Select...",
	Description = nil,
	Items = {
		{"Tap Damage", "TapDamage"},
		{"Pets Equipped", "PetsEquipped"},
		{"Golden Chance", "GoldenChance"},
		{"More Luck", "MoreLuck"},
		{"Rainbow Chance", "RainbowChance"},
		{"Ruby Multiplier", "RubyMultiplier"},
		{"Chest Chances", "ChestChances"},
		{"Max Pet Level", "MaxPetLevel"},
		{"Max Enchant", "MaxEnchant"}
    },
	Callback = function(item)
    upgrade1sel = item
end
}

upgrades1:Button{
	Name = "Buy specific",
	Description = "Buys specific upgrade once",
	Callback = function() 
        local upgrade = "Tokens"

        if upgrade1sel == nil then
            GUI:Notification{
                Title = "Alert",
                Text = "You must select an upgrade to buy",
                Duration = 3,
                Callback = function() end
            }
        else
            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, upgrade1sel)
        end
    end
}

upgrades1:Toggle{
	Name = "Auto buy specific",
	StartingState = false,
	Description = nil,
	Callback = function(state) 
    getgenv().autobuyspectoken = state
        if upgrade1sel == nil then
            GUI:Notification{
                Title = "Alert",
                Text = "Please select an upgrade to loop",
                Duration = 3,
                Callback = function() end
            }            
        else
            spawn(function()
                while autobuyspectoken == true do
                    local upgrade = "Token"
                    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(upgrade, upgrade1sel)
                    task.wait()
            end
        end)

    end
    end
}

-- tp
local tp = GUI:Tab{
	Name = "Teleport",
	Icon = "rbxassetid://8894677999"
}

local tpsel = nil
tp:Dropdown{
	Name = "World to teleport",
	StartingText = "Select...",
	Description = nil,
	Items = {
		{"Main hub", 1},
		{"Forest", 2},
		{"Desert", 3},
		{"Winter", 4},
		{"Lava", 5},
		{"Aqua", 6},
		{"Sakura", 7},
		{"Mines", 8},
		{"Galaxy", 9},
		{"Heaven", 10},
		{"Hell", 11},
		{"Tech", 13},
		{"SteamPunk", 14}

	},
	Callback = function(item) 
        tpsel = item
    end
}

tp:Button{
	Name = "Teleport to area",
	Description = nil,
	Callback = function() 
        game:GetService("ReplicatedStorage").Remotes.TeleportToArea:FireServer(tpsel)
    end
}

-- pets
local pets = GUI:Tab{
	Name = "Pets",
	Icon = "rbxassetid://9055071384"
}

pets:Dropdown{
	Name = "Dropdown",
	StartingText = "Select...",
	Description = nil,
	Items = {
		{"Hello", 1}, 		-- {name, value}
		12,			-- or just value, which is also automatically taken as name
		{"Test", "bump the thread pls"}
	},
	Callback = function(item) return end
}

-- other
local Other = GUI:Tab{
    Name = "Other",
    Icon = "rbxassetid://10386203741"
}