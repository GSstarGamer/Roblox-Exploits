local repo = 'https://raw.githubusercontent.com/wally-rblx/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()


local Window = Library:CreateWindow({
    -- Set Center to true if you want the menu to appear in the center
    -- Set AutoShow to true if you want the menu to appear when it is created
    -- Position and Size are also valid options here
    -- but you do not need to define them unless you are changing them :)

    Title = 'FallAngel Hub',
    Center = true, 
    AutoShow = true,
})


local Tabs = {
    -- Creates a new tab titled Main
    Main = Window:AddTab('Main'), 
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

local farmingbox = Tabs.Main:AddLeftGroupbox('Farming')
farmingbox:AddToggle('autofarm', {
    Text = 'Auto farm',
    Default = false, -- Default value (true / false)
    Tooltip = 'Farm selectet enemies', -- Information shown when you hover over the toggle
})

local function hit(num) 
    local ohNumber1 = num
    local ohString2 = "Basic Combat"

    game:GetService("ReplicatedStorage").Combat:FireServer(ohNumber1, ohString2) 
end

farmingbox:AddInput('selene', {
    Default = 'None',
    Numeric = false, -- true / false, only allows numbers
    Finished = false, -- true / false, only calls callback when you press enter

    Text = 'Select enemies',
    Tooltip = 'idk', -- Information shown when you hover over the textbox

    Placeholder = 'None', -- placeholder text when the box is empty
    -- MaxLength is also an option which is the max length of the text
})



Toggles.autofarm:OnChanged(function()
    local player = game.Players.LocalPlayer
    spawn(function()
    while Toggles.autofarm.Value == true do
        for i, v in pairs(game:GetService("Workspace").Characters:GetChildren()) do
            if string.gsub(v.Name, "%d", "") == Options.selene.Value and v:FindFirstChild("HumanoidRootPart") and Toggles.autofarm.Value == true then
                print("Killing ".. v.Name)
                while v:FindFirstChild("HumanoidRootPart") and Toggles.autofarm.Value == true do
                    player.Character.HumanoidRootPart.CFrame =
                        v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 5)
                    hit(5)
                    task.wait()
                end
            end
        end
    task.wait()
    end
end)
end)

-- UI Settings
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

-- I set NoUI so it does not show up in the keybinds menu
MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'End', NoUI = true, Text = 'Menu keybind' }) 

Library.ToggleKeybind = Options.MenuKeybind -- Allows you to have a custom keybind for the menu

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- ThemeManager (Allows you to have a menu theme system)

-- Hand the library over to our managers
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

-- Ignore keys that are used by ThemeManager. 
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings() 

-- Adds our MenuKeybind to the ignore list 
-- (do you want each config to have a different menu key? probably not.)
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' }) 

-- use case for doing it this way: 
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
ThemeManager:SetFolder('MyScriptHub')
SaveManager:SetFolder('MyScriptHub/specific-game')

-- Builds our config menu on the right side of our tab
SaveManager:BuildConfigSection(Tabs['UI Settings']) 

-- Builds our theme menu (with plenty of built in themes) on the left side
-- NOTE: you can also call ThemeManager:ApplyToGroupbox to add it to a specific groupbox
ThemeManager:ApplyToTab(Tabs['UI Settings'])

-- You can use the SaveManager:LoadAutoloadConfig() to load a config 
-- which has been marked to be one that auto loads!




