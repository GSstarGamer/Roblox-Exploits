repeat wait() until game:IsLoaded()
game:GetService("Players").LocalPlayer.Idled:connect(function()
    game:GetService("VirtualUser"):Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    task.wait(1)
    game:GetService("VirtualUser"):Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    end
)

local version = 0.1

local repo = 'https://raw.githubusercontent.com/wally-rblx/LinoriaLib/main/'
local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()

local function notif(title, des, time)
    Notification:Notify(
    {Title = title, Description = des},
    {OutlineColor = Color3.fromRGB(0, 255, 139),Time = time, Type = "default"}
)
end

local function nwarn(why, solve)
Notification:Notify(
    {Title = why, Description = solve},
    {OutlineColor = Color3.fromRGB(0, 255, 139),Time = 5, Type = "image"},
    {Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 166, 0)}
)
end

local function nerror(why)
Notification:Notify(
    {Title = "ERROR", Description = why},
    {OutlineColor = Color3.fromRGB(0, 255, 139),Time = 5, Type = "image"},
    {Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 0, 0)}
)
end

local player = game.Players.LocalPlayer

local Window = Library:CreateWindow({
    -- Set Center to true if you want the menu to appear in the center
    -- Set AutoShow to true if you want the menu to appear when it is created
    -- Position and Size are also valid options here
    -- but you do not need to define them unless you are changing them :)

    Title = 'Ghost Sim (Uni) | FallAngle Hub | https://discord.gg/rq5fXGKWQY',
    Center = true, 
    AutoShow = true,
})

local Tabs = {
    -- Creates a new tab titled Main
    mainTab = Window:AddTab('Main'), 
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

function get_ghost_list()
    local list = {}
    local ghost_folder = game:GetService("Workspace").Ghosts
    for i, ghost in pairs(ghost_folder:GetChildren()) do
        if not table.find(list, ghost.Name) then
            table.insert(list, ghost.Name)
        end
    end
    if #list > 0 then
        return list
    else
        return {'Not found'}
    end
end

function get_npc_list()
    local list = {}
    local npc_folder = game:GetService("Workspace").ScriptParts.NPCs
    for i, npc in pairs(npc_folder:GetChildren()) do
        if not table.find(list, npc.Name) and npc:IsA('Part') then
            table.insert(list, npc.Name)
        end
    end
    if #list > 0 then
        return list
    else
        return {'Not found'}
    end
end

function get_FindParts()
    local list = {}
    local folder = game:GetService("Workspace").ScriptParts.FindParts
    for i, item in pairs(folder:GetChildren()) do
        if item:IsA('Part') then
            table.insert(list, item.Name)
        end
    end
    if #list > 0 then
        return list
    else
        return {'Not found'}
    end
end

function get_chests()
    local list = {}
    local folder = game:GetService("Workspace").ScriptParts.Chests
    for i, chest in pairs(folder:GetChildren()) do
        if chest:IsA('Part') then
            table.insert(list, chest.Name)
        end
    end
    if #list > 0 then
        return list
    else
        return {'Not found'}
    end
end

function check_vac()
    if game:GetService("Players").slender2425.PlayerGui.UI.MainGui.VacuumBoardStatus.VacuumIcon.Light.ImageColor3 == Color3.fromRGB(255, 0, 0) then
        local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.StartUseVacuum
        Event:FireServer()
    elseif game:GetService("Players").slender2425.PlayerGui.UI.MainGui.VacuumBoardStatus.VacuumIcon.Light.ImageColor3 == Color3.fromRGB(0, 255, 0) then
    end
        return
end

function sell()
    for i, folder in pairs(game:GetService("Workspace").ScriptParts:GetChildren()) do
        if folder.Name:match('Converters') or folder.Name:match('Chargers') then
            for i, part in pairs(folder:GetChildren()) do
                if part:IsA('Part') then
                    firetouchinterest(player.Character.Head, part, 1)
                    firetouchinterest(player.Character.Head, part, 0)
                end
            end
        end
    end
end

local lists = Tabs.mainTab:AddLeftGroupbox('Lists')

lists:AddDropdown('ghostlist', {
    Values = get_ghost_list(),
    Default = 1, -- number index of the value / string
    Multi = true, -- true / false, allows multiple choices to be selected

    Text = 'Ghost list',
    Tooltip = 'List of ghosts, if ghost not there but you see it then please reexecute the script.', -- Information shown when you hover over the textbox
})
lists:AddDropdown('npclist', {
    Values = get_npc_list(),
    Default = 1, -- number index of the value / string
    Multi = false, -- true / false, allows multiple choices to be selected

    Text = 'NPC list',
    Tooltip = 'List of npcs', -- Information shown when you hover over the textbox
})
lists:AddDropdown('findpartslist', {
    Values = get_FindParts(),
    Default = 1, -- number index of the value / string
    Multi = false, -- true / false, allows multiple choices to be selected

    Text = 'FindParts list',
    Tooltip = 'list of parts needed', -- Information shown when you hover over the textbox
})
lists:AddDropdown('chestlist', {
    Values = get_chests(),
    Default = 1, -- number index of the value / string
    Multi = false, -- true / false, allows multiple choices to be selected

    Text = 'Chests',
    Tooltip = 'all the chests', -- Information shown when you hover over the textbox
})


local options = Tabs.mainTab:AddRightGroupbox('Options')

local selghost = {}

Options.ghostlist:OnChanged(function()
    selghost = {}
    for key, value in next, Options.ghostlist.Value do
        table.insert(selghost, key)
    end
end)

options:AddToggle('autofarm', {
    Text = 'Farm selected ghosts',
    Default = false, -- Default value (true / false)
    Tooltip = 'This is a tooltip', -- Information shown when you hover over the toggle
})

Toggles.autofarm:OnChanged(function()
    if Toggles.autofarm.Value == true then
        local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.StartUseVacuum
        Event:FireServer()
    elseif Toggles.autofarm.Value == false then
        local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.StopUseVacuum
        Event:FireServer()
    end
    
    spawn(function()
        while task.wait() and Toggles.autofarm.Value do
            for i, ghost in pairs(game:GetService("Workspace").Ghosts:GetChildren()) do
                if table.find(selghost, ghost.Name) then
                    if ghost:FindFirstChild("HumanoidRootPart") and ghost:FindFirstChild("Health") and player.Character then
                        repeat
                            check_vac() 
                            player.Character.HumanoidRootPart.CFrame =
                            ghost.HumanoidRootPart.CFrame * CFrame.new(0, 0, 5)
                            game:GetService("ReplicatedStorage").Network.ToServer.Requests.VacuumEnemy:FireServer(ghost)
                            task.wait()
                        until ghost.Health.Value <= 0.1 or Toggles.autofarm.Value == false
                    end
                end
            end
        end
    end)
end)



options:AddButton('NPC TP', function()
    if not Options.npclist.Value ~= 'Not found' then
    player.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").ScriptParts.NPCs:FindFirstChild(Options.npclist.Value).CFrame
    else
        nerror('Not there')
    end
end)
options:AddButton('FindPart TP', function()
    if not Options.findpartslist.Value ~= 'Not found' then
    player.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").ScriptParts.FindParts:FindFirstChild(Options.findpartslist.Value).CFrame
    else
        nerror('Not there')
    end
end)
options:AddButton('Chest TP', function()
    if Options.chestlist.Value ~= 'Not found' then
    player.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").ScriptParts.Chests:FindFirstChild(Options.chestlist.Value).CFrame
    else
        nerror('Not there')
    end
end)

options:AddDivider()

options:AddToggle('autosell', {
    Text = 'Auto Sell',
    Default = false, -- Default value (true / false)
    Tooltip = 'sells for you', -- Information shown when you hover over the toggle
})

options:AddToggle('autokill', {
    Text = 'Auto kill closest',
    Default = false, -- Default value (true / false)
    Tooltip = 'Kills every ghost near you', -- Information shown when you hover over the toggle
})

Toggles.autokill:OnChanged(function()
    spawn(
        function()
            local player = game.Players.LocalPlayer
            local distance = player.Stats.VacuumRange.Value
            while Toggles.autokill.Value == true do
                for i, v in pairs(workspace.Ghosts:GetChildren()) do
                    if v:FindFirstChild("HumanoidRootPart") then
                        local magnitude =
                            (player.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
                        if magnitude > 50 and magnitude < distance then
                            local args = {[1] = workspace.Ghosts:FindFirstChild(v)}

                            game:GetService("ReplicatedStorage").Network.ToServer.Requests.VacuumFireHit:FireServer(
                                unpack(args)
                            )
                        elseif magnitude < distance then
                            game:GetService("ReplicatedStorage").Network.ToServer.Requests.VacuumEnemy:FireServer(v)
                        end
                    end
                end
                task.wait()
            end
        end
    )
end)

options:AddButton('Get all buffs', function()
    game.Players.LocalPlayer.Stats.BoardsUnlocked.Value = true
    task.wait(.1)
    game.Players.LocalPlayer.Stats.ParachuteUnlocked.Value = true
    task.wait(.1)
    game.Players.LocalPlayer.Stats.JetpackUnlocked.Value = true
    task.wait(.1)
    game.Players.LocalPlayer.Stats.HeavyArmorUnlocked.Value = true
    task.wait(.1)
    game.Players.LocalPlayer.Stats.MagnetismUnlocked.Value = true
    task.wait(.1)
    game.Players.LocalPlayer.Stats.TurbochargerUnlocked.Value = true
    task.wait(.1)
    game.Players.LocalPlayer.Stats.AppliedPasses.DoubleTokens.Value = true
    task.wait(.1)
    game.Players.LocalPlayer.Stats.AppliedPasses.Agility.Value = true
    task.wait(.1)
    game.Players.LocalPlayer.Stats.AppliedPasses.DoubleRange.Value = true
    task.wait(.1)
    game.Players.LocalPlayer.Stats.AppliedPasses.DoubleBossDrops.Value = true
    task.wait(.1)
    game.Players.LocalPlayer.Stats.AppliedPasses.DoubleItems.Value = true
    task.wait(.1)
    game.Players.LocalPlayer.Stats.AppliedPasses.DoubleGems.Value = true
    task.wait(.1)
    game.Players.LocalPlayer.Stats.AppliedPasses.DoubleLuck.Value = true
    task.wait(.1)
    game.Players.LocalPlayer.Stats.AppliedPasses.QuickUnbox.Value = true
    task.wait(.1)
    game.Players.LocalPlayer.Stats.AppliedPasses.AutoUnbox.Value = true
    task.wait(.1)
    game.Players.LocalPlayer.Stats.AppliedPasses.DoubleSouls.Value = true
    task.wait(.1)
    game:GetService("ReplicatedStorage").Data.ServerDoubleDrops.Value = true
    task.wait(.1)
    game:GetService("ReplicatedStorage").Data.ServerDoubleEvent.Value = true
    task.wait(.1)
    game:GetService("ReplicatedStorage").Data.ServerDoubleGems.Value = true
    task.wait(.1)
    game:GetService("ReplicatedStorage").Data.ServerDoubleLuck.Value = true
end)


Toggles.autosell:OnChanged(function()
    spawn(function()
        while task.wait() and Toggles.autosell.Value do
            sell()
        end
    end)
end)


if #game:GetService("Workspace").ScriptParts.MegaBossArenas:GetChildren() > 0 then
    local bossbox = Tabs.mainTab:AddLeftGroupbox('MegaBoss')

    for i, boss in pairs(game:GetService("Workspace").ScriptParts.MegaBossArenas:GetChildren()) do
        local function get_parts()
            local list = {}
            for i, part in pairs(boss:GetChildren()) do
                if part:IsA('Part') then
                    table.insert(list, part.Name)
                end
            end
            return list
        end

        bossbox:AddDropdown('partlist', {
            Values = get_parts(),
            Default = 1, -- number index of the value / string
            Multi = false, -- true / false, allows multiple choices to be selected
        
            Text = 'Part list',
            Tooltip = 'All the parts in the mega boss area', -- Information shown when you hover over the textbox
        })

        bossbox:AddButton('TP to part', function()
            player.Character.HumanoidRootPart.CFrame = boss:FindFirstChild(Options.partlist.Value).CFrame
        end)
    end
else
    local boss = Tabs.mainTab:AddLeftGroupbox('MegaBoss')
    boss:AddButton('No MegaBoss here', function()
    end) 
end


local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')
Library:SetWatermarkVisibility(false)
MenuGroup:AddButton('Unload', function() Library:Unload() end)
Library:SetWatermarkVisibility(false)
ThemeManager:SetLibrary(Library)
ThemeManager:SetFolder('FallAngelHub')
ThemeManager:ApplyToTab(Tabs['UI Settings'])
ThemeManager:ApplyTheme('Green')