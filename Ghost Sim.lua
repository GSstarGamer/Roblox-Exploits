--Public

repeat
    task.wait()
until game:IsLoaded()

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/GSstarGamer/GUI/main/Mercury-edit.lua"))()

local GUI =
    Library:Create {
    Name = "FallAngle Hub",
    Size = UDim2.fromOffset(600, 500),
    Theme = Library.Themes.GStheme,
    Link = "https://discord.gg/tbENWKpgku"
}

GUI:Credit {
    Name = "GS_StarGamer",
    Description = "Made the script, also made the theme",
    V3rm = "https://v3rmillion.net/member.php?action=profile&uid=2560793",
    Discord = "https://discord.gg/tbENWKpgku"
}

GUI:Credit {
    Name = "RYAN_TRISTIAWAN",
    Description = "Updated code",
    V3rm = "None",
    Discord = "https://discord.gg/tbENWKpgku"
}

GUI:Credit {
    Name = "x3Fall3nAngel",
    Description = "Helped me",
    V3rm = "https://v3rmillion.net/member.php?action=profile&uid=2270329",
    Discord = "https://discord.gg/tbENWKpgku"
}

GUI:Notification {
    Title = "Hey!",
    Text = "Thank you for choosing FallAngle Hub, for more information click on the other tab",
    Duration = 20,
    Callback = function()
        game:IsLoaded()
    end
}



local vu = game:GetService("VirtualUser")

game:GetService("Players").LocalPlayer.Idled:connect(
    function()
        vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)

        wait(1)

        vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    end
)

GUI:Notification {
    Title = "Note",
    Text = "Anti-AFK activated",
    Duration = 3,
    Callback = function()
    end
}

GUI:Notification {
    Title = "Note",
    Text = "Giving Abilites",
    Duration = 3,
    Callback = function()
        game.Players.LocalPlayer.Stats.BoardsUnlocked.Value = true

        game.Players.LocalPlayer.Stats.ParachuteUnlocked.Value = true

        game.Players.LocalPlayer.Stats.JetpackUnlocked.Value = true

        game.Players.LocalPlayer.Stats.HeavyArmorUnlocked.Value = true

        game.Players.LocalPlayer.Stats.MagnetismUnlocked.Value = true

        game.Players.LocalPlayer.Stats.TurbochargerUnlocked.Value = true

        game.Players.LocalPlayer.Stats.AppliedPasses.DoubleTokens.Value = true

        game.Players.LocalPlayer.Stats.AppliedPasses.Agility.Value = true

        game.Players.LocalPlayer.Stats.AppliedPasses.DoubleRange.Value = true

        game.Players.LocalPlayer.Stats.AppliedPasses.DoubleBossDrops.Value = true

        game.Players.LocalPlayer.Stats.AppliedPasses.DoubleItems.Value = true

        game.Players.LocalPlayer.Stats.AppliedPasses.DoubleGems.Value = true

        game.Players.LocalPlayer.Stats.AppliedPasses.DoubleLuck.Value = true

        game.Players.LocalPlayer.Stats.AppliedPasses.QuickUnbox.Value = true

        game.Players.LocalPlayer.Stats.AppliedPasses.AutoUnbox.Value = true

        game.Players.LocalPlayer.Stats.AppliedPasses.DoubleSouls.Value = true

        game.Players.LocalPlayer.AcceleratorUnlocked.Value = true

        GUI:Notification {
            Title = "Alert",
            Text = "Abilities has unlocked",
            Duration = 3,
            Callback = function()
            end
        }
    end
}

local FileName = "FallAngelHub/Ghost_Simulator_Settings.txt"
local HttpService = game:GetService("HttpService")


getgenv().shared = {
    smartfarm = false,
    areafarm = false,
    bossfarm = false,
    areasel = nil,
    autokill = false,
    autosell = false,
    autoantenna = false,
    autousevacuum = false,
    autostartquest = false,
    autoclaimquest = false,
    autohitboss = false,
    boardspeed = 1,
    walkspeed = 16,
    jumppower = 16
}

if not isfolder("FallAngelHub") then
    makefolder("FallAngelHub")
end


local function LoadSettings()
    if (readfile and isfile and isfile(FileName)) then
        shared = HttpService:JSONDecode(readfile(FileName))
    end
end

local function SaveSettings()
    local json 
    json = HttpService:JSONEncode(shared)
    if (writefile) then
        writefile(FileName,json)
    end
end








--Ghosts

local Mainhubg = {
    "Lucky Cat",
    "Fairy",
    "Owl",
    "Businessman",
    "Street Cat",
    "Mechanic",
    "Garbage Bin",
    "Paper Bag Man",
    "Rat",
    "Worker",
    "Pigeon",
    "Bandit",
    "Cowboy",
    "Scientist",
    "Zorg",
    "Miner",
    "Living Rock",
    "Pharaoh",
    "Mummy",
    "Pirate",
    "Parrot",
    "Diver",
    "Mermaid",
    "Islander",
    "Magma Monster",
    "Explorer",
    "Penguin"
}

local Ghostworldg = {
    "Lucky Cat",
    "Jester",
    "Jelly",
    "Pinwheel",
    "Blue Ray",
    "Spooky",
    "Pixie",
    "Rogue",
    "Knight",
    "Wizard",
    "Horse",
    "Bongo Man",
    "Yellow Note",
    "DJ",
    "Purple Note",
    "Viney",
    "Blooming",
    "Adventurer",
    "Dragonfly"
}

local backdoorg = {
    "Lucky Cat",
    "Swamp Dweller",
    "Firefly",
    "Frost Spirit",
    "Snowstorm",
    "Flutter Spirit",
    "Mushroom",
    "Water Spirit",
    "Glitcher",
    "Error 404",
    "Rock Crystal",
    "Farmer",
    "Crazy Cow",
    "Parasite",
    "Super Computer",
    "Digital Bandit",
    "Trojan Horse",
    "Honeydrop",
    "Bee",
    "Web Surfer",
    "Binary",
    "Byte",
    "Digi Cat",
    "Guardian",
    "Data Fury",
    "Programmer",
    "RAM"
}

local thevoidg = {
    "Lucky Cat",
    "Petal",
    "Heated",
    "Slime",
    "Storm",
    "Tech"
}

local remnantg = {
    "Lucky Cat",
    "Autumn Jungler",
    "Durian Bunny",
    "Night Wizard",
    "Aqua Parrot",
    "Gem Troll",
    "Gryffin",
    "Village Raider",
    "Pig",
    "Mad Hatter",
    "Teapot",
    "Scrap Hunter",
    "Floppy Slime",
    "Sea Walker",
    "Fish Footman",
    "Cave Ninja",
    "Axolotl Princess",
    "Tree Pixie",
    "Caterpiller"
}

local eventg = {
    "Lucky Cat",
    "Soul Caster",
    "Bat",
    "Vampire",
    "Scarecrow",
    "Masked Spirit",
    "Candy Thief",
    "Wicked Witch",
    "Frankenstein",
    "Spooky Rad Businessman",
    "Television"
}

--Bossesg

local mainhubb = {
    "Ghastly Tree",
    "George the Gorilla",
    "Sludge",
    "Subject One",
    "King Krab",
    "Magmoraug",
    "Lucky Cat",
    "Dino King"
}

local ghostworldb = {
    "Grim",
    "Jolly Roger",
    "Lucky Cat",
    "The Great Guardian"
}

local thevoidb = {
    "Boss Bo"
}

local backdoorb = {
    "Anomaly",
    "Lucky Cat",
    "Anonymous"
}

local bloxbyteb = {
    "Final Boss",
    "Pillar",
    "Void Eye"
}

local remnantb = {
    "Spade Harbinger"
}

local eventb = {
    "The Headless Hallow",
    "Frankie",
    "Wisp Master"
}

--Locals

local ghostN = nil

local ghostN2 = nil

local bossN = nil

--maps

local mainhub = 2685347741

local ghostworld = 4078003854

local backdoor = 4383092793

local thevoid = 6036368776

local remnant = 10252702151

local bloxbyte = 5061426732

local event = 7780343561

local Farm =
    GUI:Tab {
    Name = "Farm",
    Icon = "rbxassetid://10802961009"
}

local BoxFarm =
    GUI:Tab {
    Name = "BoxFarm",
    Icon = "rbxassetid://10802961009"
}

local Quest =
    GUI:Tab {
    Name = "Quest",
    Icon = "rbxassetid://10802963199"
}

local Bosses =
    GUI:Tab {
    Name = "Bosses",
    Icon = "rbxassetid://10802968385"
}

local Player =
    GUI:Tab {
    Name = "Player",
    Icon = "rbxassetid://10802970674"
}

local Other =
    GUI:Tab {
    Name = "Other",
    Icon = "rbxassetid://10802972044"
}

local PlaceTeleporter =
    GUI:Tab {
    Name = "PlaceTeleporter",
    Icon = "rbxassetid://10802972044"
}

LoadSettings()

GUI:Notification{
	Title = "Alert",
	Text = "Loaded config :D",
	Duration = 3,
	Callback = function() end
}

--farm

--smart farm
local player = game.Players.LocalPlayer

game.Players.LocalPlayer.PlayerGui.UI.MainGui.CharacterMenu.Visible = true



local function ghost_todo()
    if lvl > "9" and lvl <= "10" and game.PlaceId ~= mainhub then
        local A_1 = "GhostWorld"
        local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.TransportToPlace
        Event:FireServer(A_1)
    elseif lvl > "10" and lvl <= "20" and game.PlaceId ~= backdoor then
        local A_1 = "Backdoor"
        local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.TransportToPlace
        Event:FireServer(A_1)

    end
    if game.PlaceId == mainhub then
        if lvl == "1" then
            return {"Fairy", "Owl"}
        elseif lvl == "2" then
            return {"Businessman", "Street Cat"}
        elseif lvl == "3" then
            return {"Mechanic", "Garbage Bin"}
        elseif lvl == "4" then
            return {"Paper Bag Man", "Rat"}
        elseif lvl == "5" then
            return {"Bandit", "Cowboy"}
        elseif lvl == "6" then
            return {"Scientist", "Zorg"}
        elseif lvl == "7" then
            return {"Miner", "Living rock"}
        elseif lvl == "8" then
            return {"Pirate", "Parrot"}
        elseif lvl == "9" then
            return {"Diver", "Magma Monster"}
        end
    elseif game.PlaceId == ghostworld then
        if lvl == "10" then
            return {
                "Jester",
                "Pinwheel",
                "Spooky",
                "Jelly",
                "Blue Ray",
                "Pixie",
                "Rogue",
                "Wizard",
                "Knight",
                "Horse",
                "Bongo Man",
                "DJ",
                "Yellow Note",
                "Purple Note",
                "Viney",
                "Adventurer",
                "Blooming",
                "Dragonfly"
            }
        end
    elseif game.PlaceId == backdoor then
        if lvl == "11" then
            return {"Swamp Dweller", "Firefly"}
        elseif lvl == "12" then
            return {"Frost Spirit", "Snowstorm"}
        elseif lvl == "13" then
            return {"Flutter Spirit", "Mushroom"}
        elseif lvl == "14" then
            return {"Water Spirit", "Glitcher"}
        elseif lvl == "15" then
            return {"Farmer", "Crazy Cow"}
        elseif lvl == "16" then
            return {"Parasite", "Super Computer"}
        elseif lvl == "17" then
            return {"Digital Bandit", "Trojan Horse"}
        elseif lvl == "18" then
            return {"Web Surfer", "Binary"}
        elseif lvl == "19" then
            return {"Byte", "Digi Cat"}
        elseif lvl == "20" then
            return {"Guardian", "Data Fury"}
        end

    elseif game.PlaceId == remnant then
        if lvl >= "20" then
            return {"Autumn Jungler" , "Durian Bunny"}
        elseif lvl == "21" then
            return {"Night wizard" , "Aqua Parrot"}
        elseif lvl == "22" then
            return {"Gem Troll" , "Gryffin"}
        elseif lvl == "23" then
            return {"Village Raider" , "Pig"}
        elseif lvl == "24" then
            return {"Scrap Hunter" , "Floppy Slime"}
        elseif lvl == "25" then
            return {"Sea Walker" , "Fish Footman"}
        elseif lvl == "26" then
            return {"Cave Ninja" , "Axolotl Princess"}
        end
    end
end

Farm:Toggle {
    Name = "Smart Auto farm",
    StartingState = shared.smartfarm,
    Description = "Does everything for you",
    Callback = function(state)
        shared.smartfarm = state
        SaveSettings()
        if shared.smartfarm == true then
            local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.StartUseVacuum
            Event:FireServer()
            GUI:Notification{
                Title = "Alert",
                Text = "Enable auto closest kill to increase efficacy.",
                Duration = 3,
                Callback = function() end}
            elseif shared.smartfarm == false then
                local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.StopUseVacuum
                Event:FireServer()
        end
        spawn(
            function()
                while shared.smartfarm == true do
                    local mobs = ghost_todo()
                    for i, v in pairs(workspace.Ghosts:GetChildren()) do
                        for _, ghost in pairs(mobs) do
                            if v.Name == ghost and v:FindFirstChild("HumanoidRootPart") and shared.smartfarm == true then
                                while v.Health.Value > 0 do
                                    player.Character.HumanoidRootPart.CFrame =
                                        v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 5)
                                    game:GetService("ReplicatedStorage").Network.ToServer.Requests.VacuumEnemy:FireServer(
                                        v
                                    )
                                    task.wait()
                                end
                            end
                        end
                        task.wait()
                    end
                    task.wait()
                end
            end
        )
        
    end
}

local areasel = nil

local mainhub_arealist = {
    "Forest",
    "BloxCity",
    "JunkYard",
    "Sewer",
    "WildWest",
    "Area51",
    "Mine",
    "Beach",
    "UnderWater",
    "Volcano"
}

local ghostworld_arealist = {
    "GhostlyIslandT1",
    "GhostlyIslandT2",
    "GhostlyIslandT3",
    "CastleBottom",
    "CastleTop",
    "MusicMeadowsT1",
    "MusicMeadowsT2",
    "HauntedCastleT1",
    "HauntedCastleT2"
}

local backdoor_arealist = {
    "Swamplands",
    "Winter_Tundra",
    "Mushroom_Forest",
    "Twisting_River",
    "Crystal_Cave",
    "Farm",
    "Spaceship",
    "Barn",
    "Behive"
}

local rement_arealist = {
    "EnchantedJungle",
    "BlueForest",
    "CrystalCanyon",
    "FloatingBridge",
    "ScrapCity",
    "UnderwaterRuins",
    "HiddenCaverns"
}

if game.PlaceId == mainhub then
    Farm:Dropdown {
        Name = "Select area",
        StartingText = shared.areasel,
        Description = nil,
        Items = mainhub_arealist,
        Callback = function(v)
            shared.areasel = v
        end
    }
elseif game.PlaceId == ghostworld then
    Farm:Dropdown {
        Name = "Select area",
        StartingText = shared.areasel,
        Description = nil,
        Items = ghostworld_arealist,
        Callback = function(v)
                shared.areasel = v
        end
    }
    elseif game.PlaceId == backdoor then
        Farm:Dropdown {
            Name = "Select area",
            StartingText = shared.areasel,
            Description = nil,
            Items = backdoor_arealist,
            Callback = function(v)
                    shared.areasel = v
            end
        }
        elseif game.PlaceId == remnant then
            Farm:Dropdown {
                Name = "Select area",
                StartingText = shared.areasel,
                Description = nil,
                Items = rement_arealist,
                Callback = function(v)
                        shared.areasel = v
                end
            }
end

local function ghost_list_giver(selarea)
    -- MAINHUB
    local Forest = { --1
    "Fairy",
    "Owl"
    }

    local BloxCity = { --2
    "Businessman",
    "Street Cat"
    }

    local JunkYard = { --3
    "Mechanic",
    "Garbage Bin"
    }

    local Sewer = { --4
    "Paper Bag Man",
    "Rat"
    }

    local WildWest = { --5
    "Bandit",
    "Cowboy"
    }

    local Area51 = { --6
    "Scientist",
    "Zorg"
    }

    local Mine = { --7
    "Miner",
    "Living Rock"
    }

    local Beach = { --8
    "Pirate",
    "Parrot"
    }

    local UnderWater = { --9
    "Diver",
    "Mermaid"
    }

    local Volcano = { --10
    "Islander",
    "Magma Monster"
    }

    --GHOST WORLD
    local GhostlyIslandT1 = { --10
    "Jester",
    "Jelly"
  }
  
  local GhostlyIslandT2 = { --10
    "Pinwheel",
    "Blue Ray"
  }
  
  local GhostlyIslandT3 = { --10
    "Spooky",
    "Pixie"
  }
  
  local CastleBottom = { --10
    "Rogue",
    "Knight"
  }
  
  local CastleTop = { --10
    "Wizard",
    "Horse"
  }
  
  local MusicMeadowsT1 = { --10
    "Bongo man",
    "Yellow Note"
  }
  
  local MusicMeadowsT2 = { --10
    "DJ",
    "Purple Note"
  }
  
  local HauntedCastleT1 = { --10
    "Viney",
    "Blooming"
  }
  
  local HauntedCastleT2 = { --10
    "Adventurer",
    "Dragonfly"
  }

  --backdoor

  local Swamplands = {
    "Swamp Dweller",
    "Firefly"
  }
  local Winter_Tundra = {
    "Frost Spirit",
    "Snowstorm"
  }
  local Mushroom_Forest = {
    "Flutter Spirit",
    "Mushroom"
  }
  local Twisting_River = {
    "Water Spirit",
    "Glitcher"
  }
  local Crystal_Cave = {
    "Error 404",
    "Rock Crystal"
  }
  local Farm = {
    "Farmer",
    "Crazy Cow"
  }
  local Spaceship = {
    "Parasite",
    "Super Computer"
  }
  local Barn = {
    "Digital Bandit",
    "Trojan Horse"
  }
  local Behive = {
    "Honeydrop",
    "Bee"
  }

  --rement
  local EnchantedJungle = { --20
  "Autumn Jungler",
  "Durian Bunny"
}

local BlueForest = { --21
  "Night Wizard",
  "Aqua Parrot"
}

local CrystalCanyon = { --22
  "Gem Troll",
  "Gryffin"
}

local FloatingBridge = { --23
  "Village Raider",
  "Pig"
}

local ScrapCity = { --24
  "Scrap Hunter",
  "Floppy Slime"
}

local UnderwaterRuins = { --25
  "Sea Walker",
  "Fish Footman"
}

local HiddenCaverns = { --26
  "Cave Ninja",
  "Axolotl Princess"
}


    if selarea == "Forest" then
        return Forest
    elseif selarea == "BloxCity" then
        return BloxCity
    elseif selarea == "JunkYard" then
        return JunkYard
    elseif selarea == "Sewer" then
        return Sewer
    elseif selarea == "WildWest" then
        return WildWest
    elseif selarea == "Area51" then
        return Area51
    elseif selarea == "Mine" then
        return Mine
    elseif selarea == "Beach" then
        return Beach
    elseif selarea == "UnderWater" then
        return UnderWater
    elseif selarea == "Volcano" then
        return Volcano

    elseif selarea == "GhostlyIslandT1" then
        return GhostlyIslandT1
    elseif selarea == "GhostlyIslandT2" then
        return GhostlyIslandT2
    elseif selarea == "GhostlyIslandT3" then
        return GhostlyIslandT3
    elseif selarea == "CastleBottom" then
        return CastleBottom
    elseif selarea == "CastleTop" then
        return CastleTop
    elseif selarea == "MusicMeadowsT1" then
        return MusicMeadowsT1
    elseif selarea == "MusicMeadowsT2" then
        return MusicMeadowsT2
    elseif selarea == "HauntedCastleT1" then
        return HauntedCastleT1
    elseif selarea == "HauntedCastleT2" then
        return HauntedCastleT2

    elseif selarea == "Swamplands" then
        return Swamplands
    elseif selarea == "Winter_Tundra" then
        return Winter_Tundra
    elseif selarea == "Mushroom_Forest" then
        return Mushroom_Forest
    elseif selarea == "Twisting_River" then
        return Twisting_River
    elseif selarea == "Crystal_Cave" then
        return Crystal_Cave
    elseif selarea == "Farm" then
        return Farm
    elseif selarea == "Spaceship" then
        return Spaceship
    elseif selarea == "Barn" then
        return Barn
    elseif selarea == "Behive" then
        return Behive

    elseif selarea == "EnchantedJungle" then
        return Behive
    elseif selarea == "BlueForest" then
        return Behive
    elseif selarea == "CrystalCanyon" then
        return Behive
    elseif selarea == "FloatingBridge" then
        return Behive
    elseif selarea == "ScrapCity" then
        return Behive
    elseif selarea == "UnderwaterRuins" then
        return Behive
    elseif selarea == "HiddenCaverns" then
        return Behive
    end
end


Farm:Toggle {
    Name = "Area Auto farm",
    StartingState = shared.areafarm,
    Description = "Farms in selected area",
    Callback = function(state)
        shared.areafarm = state
        SaveSettings()
        if shared.areafarm == true then
            local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.StartUseVacuum
            Event:FireServer()
            GUI:Notification{
                Title = "Alert",
                Text = "Enable auto closest kill to increase efficacy.",
                Duration = 3,
                Callback = function() end}
            elseif shared.areafarm == false then
                local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.StopUseVacuum
                Event:FireServer()
        end
        spawn(
            function()
                while shared.areafarm == true do
                    for i, v in pairs(workspace.Ghosts:GetChildren()) do
                        for _, ghost in pairs(ghost_list_giver(shared.areasel)) do
                            if v.Name == ghost and v:FindFirstChild("HumanoidRootPart") and shared.areafarm == true then
                                while v.Health.Value > 0 do
                                    player.Character.HumanoidRootPart.CFrame =
                                        v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 5)
                                    game:GetService("ReplicatedStorage").Network.ToServer.Requests.VacuumEnemy:FireServer(
                                        v
                                    )
                                    task.wait()
                                end
                            end
                        end
                        task.wait()
                    end
                    task.wait()
                end
            end
        )

    end
}

Farm:Toggle{
	Name = "Auto kill closest",
	StartingState = shared.autokill,
	Description = "Also an multi killer",
	Callback = function(state) 
        shared.autokill = state
        SaveSettings()
        local player = game.Players.LocalPlayer
        local distance = player.Stats.VacuumRange.Value
        if shared.autokill == true then

        end
        spawn(function ()
            while shared.autokill == true do
                for i, v in pairs(workspace.Ghosts:GetChildren()) do
                    if v:FindFirstChild("HumanoidRootPart") then
                        local magnitude = (player.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
                            if magnitude > 50 and magnitude < distance then
                                local args = {[1] = workspace.Ghosts:FindFirstChild(v)}

                                game:GetService("ReplicatedStorage").Network.ToServer.Requests.VacuumFireHit:FireServer(unpack(args))
                            elseif magnitude < distance then
                                game:GetService("ReplicatedStorage").Network.ToServer.Requests.VacuumEnemy:FireServer(v)
                        end
                    end
                end
            task.wait()
            end
        end)
        
    end
}

if game.PlaceId == mainhub then
    Farm:Toggle {
        Name = "Autosell",
        StartingState = shared.autosell,
        Description = nil,
        Callback = function(state)
            shared.autosell = state
            SaveSettings()
            spawn(
                function()
                    while shared.autosell == true do
                        local player = game.Players.LocalPlayer

                        local bLocation

                        function teleport(loc)
                            bLocation = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

                            if game.Players.LocalPlayer.Character.Humanoid.Sit then
                                game.Players.LocalPlayer.Character.Humanoid.Sit = false
                            end

                            wait()

                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = loc
                        end
                        fullval = player.PlayerGui.UI.MainGui.PackStatus.FillBar.Label.Text
                        split = fullval.split(fullval, " ")
                        current_val = split[1]
                        max_val = split[3]
                        if current_val == max_val then
                            teleport(CFrame.new(211, -148, -1710)) --  MAIN WORLD ----  CFrame.new(211, -148, -1710)  GHOST WORLD ---  CFrame.new(123, -862, 6040)   ---- VOID  CFrame.new(-2, 257, -154)

                            teleport(bLocation)
                        end
                        task.wait()
                    end
                end
            )
            
        end
    }
elseif game.PlaceId == ghostworld then
    Farm:Toggle {
        Name = "Autosell",
        StartingState = false,
        Description = nil,
        Callback = function(state)
            shared.autosell = state
            SaveSettings()
            spawn(
                function()
                    while shared.autosell == true do
                        local player = game.Players.LocalPlayer

                        local bLocation

                        function teleport(loc)
                            bLocation = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

                            if game.Players.LocalPlayer.Character.Humanoid.Sit then
                                game.Players.LocalPlayer.Character.Humanoid.Sit = false
                            end

                            wait()

                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = loc
                        end

                        fullval = player.PlayerGui.UI.MainGui.PackStatus.FillBar.Label.Text
                        split = fullval.split(fullval, " ")
                        current_val = split[1]
                        max_val = split[3]
                        if current_val == max_val then
                            teleport(CFrame.new(123, -862, 6040)) --  MAIN WORLD ----  CFrame.new(211, -148, -1710)  GHOST WORLD ---  CFrame.new(123, -862, 6040)   ---- VOID  CFrame.new(-2, 257, -154)

                            teleport(bLocation)
                        end
                        task.wait()
                    end
                end
            )
            
        end
    }
elseif game.PlaceId == backdoor then
    Farm:Toggle {
        Name = "Autosell",
        StartingState = false,
        Description = nil,
        Callback = function(state)
            shared.autosell = state
            SaveSettings()
            spawn(
                function()
                    while shared.autosell == true do
                        local player = game.Players.LocalPlayer

                        local bLocation

                        function teleport(loc)
                            bLocation = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

                            if game.Players.LocalPlayer.Character.Humanoid.Sit then
                                game.Players.LocalPlayer.Character.Humanoid.Sit = false
                            end

                            wait()

                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = loc
                        end

                        fullval = player.PlayerGui.UI.MainGui.PackStatus.FillBar.Label.Text
                        split = fullval.split(fullval, " ")
                        current_val = split[1]
                        if current_val == "0" then
                            teleport(
                                CFrame.new(
                                    99.1463547,
                                    278.861572,
                                    -744.693115,
                                    -0.945054948,
                                    1.84763416e-09,
                                    -0.326911479,
                                    3.85483538e-08,
                                    1,
                                    -1.05786064e-07,
                                    0.326911479,
                                    -1.12575549e-07,
                                    -0.945054948
                                )
                            ) --  MAIN WORLD ----  CFrame.new(211, -148, -1710)  GHOST WORLD ---  CFrame.new(123, -862, 6040)   ---- VOID  CFrame.new(-2, 257, -154)

                            teleport(bLocation)
                        end
                        task.wait()
                    end
                end
            )
            
        end
    }
elseif game.PlaceId == thevoid then
    Farm:Toggle {
        Name = "Autosell",
        StartingState = false,
        Description = nil,
        Callback = function(state)
            shared.autosell = state
            SaveSettings()
            spawn(
                function()
                    while shared.shared.autosell == true do
                        local player = game.Players.LocalPlayer

                        local bLocation

                        function teleport(loc)
                            bLocation = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

                            if game.Players.LocalPlayer.Character.Humanoid.Sit then
                                game.Players.LocalPlayer.Character.Humanoid.Sit = false
                            end

                            wait()

                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = loc
                        end
                        fullval = player.PlayerGui.UI.MainGui.PackStatus.FillBar.Label.Text
                        split = fullval.split(fullval, " ")
                        current_val = split[1]
                        max_val = split[3]
                        if current_val == max_val then
                            teleport(
                                CFrame.new(
                                    -3.90317607,
                                    263.064301,
                                    -153.025772,
                                    -0.162031665,
                                    1.84763416e-09,
                                    -0.326911479,
                                    3.85483538e-08,
                                    1,
                                    -1.05786064e-07,
                                    0.326911479,
                                    -1.12575549e-07,
                                    -0.945054948
                                )
                            ) --  MAIN WORLD ----  CFrame.new(211, -148, -1710)  GHOST WORLD ---  CFrame.new(123, -862, 6040)   ---- VOID  CFrame.new(-2, 257, -154)

                            teleport(bLocation)
                        end
                        task.wait()
                    end
                end
            )
            
        end
    }
elseif game.PlaceId == remnant then
    Farm:Toggle {
        Name = "Autosell",
        StartingState = false,
        Description = nil,
        Callback = function(state)
            shared.autosell = state
            SaveSettings()
            spawn(
                function()
                    while shared.shared.autosell == true do
                        local player = game.Players.LocalPlayer

                        local bLocation

                        function teleport(loc)
                            bLocation = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

                            if game.Players.LocalPlayer.Character.Humanoid.Sit then
                                game.Players.LocalPlayer.Character.Humanoid.Sit = false
                            end

                            wait()

                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = loc
                        end

                        fullval = player.PlayerGui.UI.MainGui.PackStatus.FillBar.Label.Text
                        split = fullval.split(fullval, " ")
                        current_val = split[1]
                        max_val = split[3]
                        if current_val == max_val then
                            teleport(CFrame.new(236, 155, -101)) --  MAIN WORLD ----  CFrame.new(211, -148, -1710)  GHOST WORLD ---  CFrame.new(123, -862, 6040)   ---- VOID  CFrame.new(-2, 257, -154)

                            teleport(bLocation)
                        end
                        task.wait()
                    end
                end
            )
            
        end
    }
elseif game.PlaceId == event then
    Farm:Toggle {
        Name = "Autosell",
        StartingState = false,
        Description = nil,
        Callback = function(state)
            shared.autosell = state
            SaveSettings()
            spawn(
                function()
                    while shared.shared.autosell == true do
                        local player = game.Players.LocalPlayer

                        local bLocation

                        function teleport(loc)
                            bLocation = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

                            if game.Players.LocalPlayer.Character.Humanoid.Sit then
                                game.Players.LocalPlayer.Character.Humanoid.Sit = false
                            end

                            wait()

                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = loc
                        end

                        fullval = player.PlayerGui.UI.MainGui.PackStatus.FillBar.Label.Text
                        split = fullval.split(fullval, " ")
                        current_val = split[1]
                        max_val = split[3]
                        if current_val == max_val then
                            teleport(CFrame.new(250, -36, -61)) --  MAIN WORLD ----  CFrame.new(211, -148, -1710)  GHOST WORLD ---  CFrame.new(123, -862, 6040)   ---- VOID  CFrame.new(-2, 257, -154)

                            teleport(bLocation)
                        end
                        task.wait()
                    end
                end
            )
            
        end
    }
end



Farm:Toggle {
    Name = "Auto Antenna upgrade",
    StartingState = shared.autoantenna,
    Description = nil,
    Callback = function(state)
        shared.autoantenna = state
        SaveSettings()
        spawn(
            function()
                while shared.autoantenna == true do
                    game:GetService("ReplicatedStorage").Network.ToServer.Requests.UpgradeAntenna:FireServer()

                    task.wait()
                end
            end
        )
        
    end
}

Farm:Toggle {
    Name = "Auto Use Vacuum",
    StartingState = shared.autousevacuum,
    Description = "To Prevent Bug When Auto Farming Ghosts or Bosses",
    Callback = function(state)
        shared.autousevacuum = state
        SaveSettings()
        spawn(
            function()
                while shared.autousevacuum == true do

                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.StopUseVacuum
                    Event:FireServer()


                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.StartUseVacuum
                    Event:FireServer()

                    task.wait(10)
                end
            end
        )
        
    end
}

if game.PlaceId == mainhub then
    Farm:Button {
        Name = "Quick Win Race",
        Description = "Click to Tween",
        Callback = function()
            local lp = game.Players.LocalPlayer
            local char = lp.Character
            function bypassTP(cf, time)
                local hrp = char.PrimaryPart
                local ts = game:GetService("TweenService")
                ts:Create(
                    hrp,
                    TweenInfo.new(time, Enum["EasingStyle"].Linear),
                    {
                        CFrame = cf
                    }
                ):Play()
            end

            bypassTP(CFrame.new(5330, -160, 1091), 14)

            GUI:Notification {
                Title = "Alert",
                Text = "Tweening...",
                Duration = 1,
                Callback = function()
                end
            }
        end
        
    }
end

--- BOXING FARM

BoxFarm:Toggle {
    Name = "Auto Pet Crate #1",
    StartingState = false,
    Description = nil,
    Callback = function(state)
        getgenv().AutoBox1 = state

        spawn(
            function()
                while AutoBox1 == true do
                    local A_1 = 1
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenPetCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
    end
}

BoxFarm:Toggle {
    Name = "Auto Pet Crate #2",
    StartingState = false,
    Description = nil,
    Callback = function(state)
        getgenv().AutoBox2 = state

        spawn(
            function()
                while AutoBox2 == true do
                    local A_1 = 2
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenPetCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
    end
}

BoxFarm:Toggle {
    Name = "Auto Pet Crate #3",
    StartingState = false,
    Description = nil,
    Callback = function(state)
        getgenv().AutoBox3 = state

        spawn(
            function()
                while AutoBox3 == true do
                    local A_1 = 3
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenPetCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
    end
}

BoxFarm:Toggle {
    Name = "Auto Pet Crate #4",
    StartingState = false,
    Description = nil,
    Callback = function(state)
        getgenv().AutoBox4 = state

        spawn(
            function()
                while AutoBox4 == true do
                    local A_1 = 4
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenPetCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
    end
}

BoxFarm:Toggle {
    Name = "Auto Pet Crate #5",
    StartingState = false,
    Description = nil,
    Callback = function(state)
        getgenv().AutoBox5 = state

        spawn(
            function()
                while AutoBox5 == true do
                    local A_1 = 5
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenPetCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

BoxFarm:Toggle {
    Name = "Auto Pet Crate #6",
    StartingState = false,
    Description = nil,
    Callback = function(state)
        getgenv().AutoBox6 = state

        spawn(
            function()
                while AutoBox6 == true do
                    local A_1 = 7
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenPetCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

BoxFarm:Toggle {
    Name = "Auto Pet Crate #7",
    StartingState = false,
    Description = nil,
    Callback = function(state)
        getgenv().AutoBox7 = state

        spawn(
            function()
                while AutoBox7 == true do
                    local A_1 = 8
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenPetCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

BoxFarm:Toggle {
    Name = "Auto Pet Crate #8",
    StartingState = false,
    Description = "WARNING! it will drains your gems quickly!",
    Callback = function(state)
        getgenv().AutoBox8 = state

        spawn(
            function()
                while AutoBox8 == true do
                    local A_1 = 9
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenPetCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

BoxFarm:Toggle {
    Name = "Auto Pet Crate #9",
    StartingState = false,
    Description = "WARNING! it will drains your gems quickly!",
    Callback = function(state)
        getgenv().AutoBox9 = state

        spawn(
            function()
                while AutoBox9 == true do
                    local A_1 = 10
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenPetCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

BoxFarm:Toggle {
    Name = "Auto Pet Crate #10",
    StartingState = false,
    Description = "WARNING! it will drains your gems quickly!",
    Callback = function(state)
        getgenv().AutoBox10 = state

        spawn(
            function()
                while AutoBox10 == true do
                    local A_1 = 11
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenPetCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
    end
}

BoxFarm:Toggle {
    Name = "Auto Pet Crate #11",
    StartingState = false,
    Description = "WARNING! it will drains your gems quickly!",
    Callback = function(state)
        getgenv().AutoBox11 = state

        spawn(
            function()
                while AutoBox11 == true do
                    local A_1 = 12
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenPetCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
    end
}

BoxFarm:Toggle {
    Name = "Auto Void Pet Crate (Crown Key)",
    StartingState = false,
    Description = "WARNING! it will drains your Crown Keys quickly!",
    Callback = function(state)
        getgenv().AutoBox12 = state

        spawn(
            function()
                while AutoBox12 == true do
                    local A_1 = 13
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenPetCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}
BoxFarm:Toggle {
    Name = "Auto Void Pet Crate (Crate Key)",
    StartingState = false,
    Description = "WARNING! it will drains your Crate Keys quickly!",
    Callback = function(state)
        getgenv().AutoBox12 = state

        spawn(
            function()
                while AutoBox12 == true do
                    local A_1 = 13
                    local A_2 = true
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenPetCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

BoxFarm:Toggle {
    Name = "Auto Pet Crate #13",
    StartingState = false,
    Description = "WARNING! it will drains your gems quickly!",
    Callback = function(state)
        getgenv().AutoBox13 = state

        spawn(
            function()
                while AutoBox13 == true do
                    local A_1 = 14
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenPetCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

BoxFarm:Toggle {
    Name = "Auto Pet Crate #14",
    StartingState = false,
    Description = "WARNING! it will drains your gems quickly!",
    Callback = function(state)
        getgenv().AutoBox14 = state

        spawn(
            function()
                while AutoBox14 == true do
                    local A_1 = 15
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenPetCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

BoxFarm:Toggle {
    Name = "Auto Pet Crate #15",
    StartingState = false,
    Description = "WARNING! it will drains 50m gems Instantly!",
    Callback = function(state)
        getgenv().AutoBox15 = state

        spawn(
            function()
                while AutoBox15 == true do
                    local A_1 = 16
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenPetCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

BoxFarm:Button {
    Name = "<--Board Crates-->",
    Description = nil,
    Callback = function()
        GUI:Notification {
            Title = "Notification",
            Text = "No",
            Duration = 1,
            Callback = function()
            end
        }
    end
}

BoxFarm:Toggle {
    Name = "Auto Board Crate #1",
    StartingState = false,
    Description = nil,
    Callback = function(state)
        getgenv().AutoBBox1 = state

        spawn(
            function()
                while AutoBBox1 == true do
                    local A_1 = 1
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenBoardCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

BoxFarm:Toggle {
    Name = "Auto Board Crate #2",
    StartingState = false,
    Description = nil,
    Callback = function(state)
        getgenv().AutoBBox2 = state

        spawn(
            function()
                while AutoBBox2 == true do
                    local A_1 = 2
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenBoardCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

BoxFarm:Toggle {
    Name = "Auto Board Crate #3",
    StartingState = false,
    Description = nil,
    Callback = function(state)
        getgenv().AutoBBox3 = state

        spawn(
            function()
                while AutoBBox3 == true do
                    local A_1 = 3
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenBoardCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

BoxFarm:Toggle {
    Name = "Auto Board Crate #4",
    StartingState = false,
    Description = "WARNING! it will drains your gems quickly!",
    Callback = function(state)
        getgenv().AutoBBox4 = state

        spawn(
            function()
                while AutoBBox4 == true do
                    local A_1 = 4
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenBoardCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

BoxFarm:Toggle {
    Name = "Auto Board Crate #5",
    StartingState = false,
    Description = "WARNING! it will drains your gems quickly!",
    Callback = function(state)
        getgenv().AutoBBox5 = state

        spawn(
            function()
                while AutoBBox5 == true do
                    local A_1 = 5
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenBoardCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

BoxFarm:Toggle {
    Name = "Auto Board Crate #6",
    StartingState = false,
    Description = "WARNING! it will drains your gems quickly!",
    Callback = function(state)
        getgenv().AutoBBox6 = state

        spawn(
            function()
                while AutoBBox6 == true do
                    local A_1 = 6
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenBoardCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

BoxFarm:Toggle {
    Name = "Auto Void Board Crate (2 Crown Keys)",
    StartingState = false,
    Description = "WARNING! it will drains your Crown Keys quickly!",
    Callback = function(state)
        getgenv().AutoBBox7 = state

        spawn(
            function()
                while AutoBBox7 == true do
                    local A_1 = 7
                    local A_2 = false
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenBoardCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

BoxFarm:Toggle {
    Name = "Auto Void Board Crate (Crate Keys)",
    StartingState = false,
    Description = "WARNING! it will drains your Crate Keys quickly!",
    Callback = function(state)
        getgenv().AutoBBox7 = state

        spawn(
            function()
                while AutoBBox7 == true do
                    local A_1 = 7
                    local A_2 = true
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.OpenBoardCrate
                    Event:FireServer(A_1, A_2)

                    task.wait()
                end
            end
        )
        
    end
}

--quest

Quest:Toggle {
    Name = "Auto start quests",
    StartingState = shared.autostartquest,
    Description = nil,
    Callback = function(state)
        shared.autostartquest = state
        SaveSettings()
        spawn(
            function()
                while shared.autostartquest == true do
                    for i = 1, 500 do
                        local args = {
                            [1] = i
                        }

                        game:GetService("ReplicatedStorage").Network.ToServer.Requests.StartQuest:FireServer(
                            unpack(args)
                        )

                        task.wait()
                    end
                end
            end
        )
        
    end
}

Quest:Toggle {
    Name = "Auto Claim Quest",
    StartingState = shared.autoclaimquest,
    Description = nil,
    Callback = function(state)
        shared.autoclaimquest = state
        SaveSettings()
        spawn(
            function()
                while shared.autoclaimquest == true do
                    for i = 1, 500 do
                        local args = {
                            [1] = i
                        }

                        game:GetService("ReplicatedStorage").Network.ToServer.Requests.AdvanceQuest:FireServer(
                            unpack(args)
                        )

                        task.wait()
                    end
                end
            end
        )
        
    end
}

--bosses

if game.PlaceId == mainhub then
    Bosses:Dropdown {
        Name = "Select boss",
        StartingText = "Select...",
        Description = nil,
        Items = mainhubb,
        Callback = function(v)
            bossN = v
            
        end
    }
elseif game.PlaceId == ghostworld then
    Bosses:Dropdown {
        Name = "Select boss",
        StartingText = "Select...",
        Description = nil,
        Items = ghostworldb,
        Callback = function(v)
            bossN = v
        end
    }
elseif game.PlaceId == thevoid then
    Bosses:Dropdown {
        Name = "Select boss",
        StartingText = "Select...",
        Description = nil,
        Items = thevoidb,
        Callback = function(v)
            bossN = v
        end
    }
elseif game.PlaceId == backdoor then
    Bosses:Dropdown {
        Name = "Select boss",
        StartingText = "Select...",
        Description = nil,
        Items = backdoorb,
        Callback = function(v)
            bossN = v
        end
    }
elseif game.PlaceId == remnant then
    Bosses:Dropdown {
        Name = "Select boss",
        StartingText = "Select...",
        Description = nil,
        Items = remnantb,
        Callback = function(v)
            bossN = v
        end
    }
elseif game.PlaceId == bloxbyte then
    Bosses:Dropdown {
        Name = "Select boss",
        StartingText = "Select...",
        Description = nil,
        Items = bloxbyteb,
        Callback = function(v)
            bossN = v
        end
    }
elseif game.PlaceId == event then
    Bosses:Dropdown {
        Name = "Select boss",
        StartingText = "Select...",
        Description = nil,
        Items = eventb,
        Callback = function(v)
            bossN = v
        end
    }
end

if game.PlaceId == bloxbyte then
    Bosses:Button {
        Name = "Note",
        Description = nil,
        Callback = function()
            GUI:Notification {
                Title = "Alert",
                Text = "To farm final boss you need to activate pillar and void eye",
                Duration = 3,
                Callback = function()
                end
            }
        end
    }
end

Bosses:Toggle {
    Name = "Bossfarm",
    StartingState = shared.bossfarm,
    Description = nil,
    Callback = function(state)
        local GhostsFolder = game.Workspace.Ghosts

        shared.bossfarm = state
        SaveSettings()

        GUI:Notification {
            Title = "Alert",
            Text = "If you are not tp'ing then the boss is not spawned yet, or dm me.",
            Duration = 3,
            Callback = function()
            end
        }

        spawn(
            function()
                while shared.bossfarm == true do
                    game:GetService("Workspace").player.Corruption.Value = 0
                    for i, v in pairs(workspace.Ghosts:GetChildren()) do
                        if v.Name == bossN and v:FindFirstChild("HumanoidRootPart") and shared.bossfarm == true then
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 10)

                            local remote = game:GetService("ReplicatedStorage").Network.ToServer.Requests.VacuumEnemy

                            remote:FireServer(v)
                        elseif bossN == nil then
                            GUI:Notification {
                                Title = "ERROR",
                                Text = "You have not selected the yet yet.",
                                Duration = 3,
                                Callback = function()
                                end
                            }

                            wait(3)
                        end
                    end

                    task.wait()
                end
            end
        )
    end
}

Bosses:Toggle {
    Name = "Auto hit boss",
    StartingState = shared.autohitboss,
    Description = nil,
    Callback = function(state)
        shared.autohitboss = state
        SaveSettings()
        GUI:Notification {
            Title = "Alert",
            Text = "Use this featuer only with bosses with shield",
            Duration = 3,
            Callback = function()
            end
        }

        spawn(
            function()
                while shared.autohitboss == true do
                    local args = {
                        [1] = workspace.Ghosts:FindFirstChild(bossN)
                    }

                    game:GetService("ReplicatedStorage").Network.ToServer.Requests.VacuumFireHit:FireServer(
                        unpack(args)
                    )

                    task.wait()
                end
            end
        )
        
    end
}

Bosses:Button{
	Name = "Anti Corruption",
	Description = "aka god mode",
	Callback = function() 
        local plr = game:GetService("Players").LocalPlayer
        workspace[plr.Name].Corruption.Value = math.huge
    end
}

Bosses:Toggle {
    Name = "Auto Use Event Bait",
    StartingState = false,
    Description = "Automatically skip boss timer or race timer",
    Callback = function(state)
        getgenv().autouseEB = state

        spawn(
            function()
                while autouseEB == true do
                    local A_1 = 32
                    local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.UseItem
                    Event:FireServer(A_1)

                    task.wait(5)
                end
            end
        )
    end
}

--other
Other:Button {
    Name = "Infinite Yield",
    Description = "Hacker's Admin Command",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()

        GUI:Notification {
            Title = "Notification",
            Text = "Loaded!",
            Duration = 3,
            Callback = function()
            end
        }
    end
}

Other:Button {
    Name = "Print Ghosts in your area",
    Description = nil,
    Callback = function()
        for i, v in pairs(game.Workspace.Ghosts:GetChildren()) do
            print(v.Name)
        end

        GUI:Notification {
            Title = "Alert",
            Text = "Open console to see all ghosts in your area. press F9",
            Duration = 3,
            Callback = function()
            end
        }
    end
}

Other:Button {
    Name = "Purchase Void Set",
    Description = "Required 2 Crown Keys",
    Callback = function()
        local A_1 = 38
        local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.PurchasePack
        Event:FireServer(A_1)
        local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.PurchaseVacuum
        Event:FireServer(A_1)

        GUI:Notification {
            Title = "Notification",
            Text = "Purchased!",
            Duration = 1,
            Callback = function()
            end
        }
    end
}

--MAIN WORLD ----  CFrame.new(211, -148, -1710)  GHOST WORLD ---  CFrame.new(123, -862, 6040)   ---- VOID  CFrame.new(-2, 257, -154)

local mainhubs = "211, -148, -1710"

local ghostworlds = "123, -862, 6040"

local backdoors =
    "99.1463547, 278.861572, -744.693115, -0.945054948, 1.84763416e-09, -0.326911479, 3.85483538e-08, 1, -1.05786064e-07, 0.326911479, -1.12575549e-07, -0.945054948"

if game.PlaceId == mainhub then
    Other:Keybind {
        Name = "Quick sell keybind",
        Keybind = nil,
        Description = "quick sell",
        Callback = function()
            GUI:Notification {
                Title = "Alert",
                Text = "Teleporting...",
                Duration = 0.5,
                Callback = function()
                end
            }

            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(211, -148, -1710)
        end
    }
elseif game.PlaceId == ghostworld then
    Other:Keybind {
        Name = "Quick sell keybind",
        Keybind = nil,
        Description = "quick sell",
        Callback = function()
            GUI:Notification {
                Title = "Alert",
                Text = "Teleporting...",
                Duration = 0.5,
                Callback = function()
                end
            }

            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(123, -862, 6040)
        end
    }
elseif game.PlaceId == backdoor then
    Other:Keybind {
        Name = "Quick sell keybind",
        Keybind = nil,
        Description = "quick sell",
        Callback = function()
            GUI:Notification {
                Title = "Alert",
                Text = "Teleporting...",
                Duration = 0.5,
                Callback = function()
                end
            }

            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                99.1463547,
                278.861572,
                -744.693115,
                -0.945054948,
                1.84763416e-09,
                -0.326911479,
                3.85483538e-08,
                1,
                -1.05786064e-07,
                0.326911479,
                -1.12575549e-07,
                -0.945054948
            )
        end
    }
elseif game.PlaceId == thevoid then
    Other:Keybind {
        Name = "Quick sell keybind",
        Keybind = nil,
        Description = "quick sell",
        Callback = function()
            GUI:Notification {
                Title = "Alert",
                Text = "Teleporting...",
                Duration = 0.5,
                Callback = function()
                end
            }

            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                -3.90317607,
                263.064301,
                -153.025772,
                -0.162031665,
                1.84763416e-09,
                -0.326911479,
                3.85483538e-08,
                1,
                -1.05786064e-07,
                0.326911479,
                -1.12575549e-07,
                -0.945054948
            )
        end
    }
elseif game.PlaceId == remnant then
    Other:Keybind {
        Name = "Quick sell keybind",
        Keybind = nil,
        Description = "quick sell",
        Callback = function()
            GUI:Notification {
                Title = "Alert",
                Text = "Teleporting...",
                Duration = 0.5,
                Callback = function()
                end
            }

            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                235.656174,
                152.809265,
                -104.883347,
                0.973367274,
                1.4151309e-09,
                0.229251161,
                -2.94092928e-09,
                1,
                6.31391961e-09,
                0.326911479,
                -1.12575549e-07,
                -0.945054948
            )
        end
    }
elseif game.PlaceId == event then
    Other:Keybind {
        Name = "Quick sell keybind",
        Keybind = nil,
        Description = "quick sell",
        Callback = function()
            GUI:Notification {
                Title = "Alert",
                Text = "Teleporting...",
                Duration = 0.5,
                Callback = function()
                end
            }

            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(250, -36, -61)
        end
    }
end

if game.PlaceId == mainhub then
    Other:Button {
        Name = "Serverhop",
        Description = "Serverhop in the same world",
        Callback = function()
            local Servers =
                game.HttpService:JSONDecode(
                game:HttpGet("https://games.roblox.com/v1/games/2685347741/servers/Public?sortOrder=Asc&limit=100")
            )

            for i, v in pairs(Servers.data) do
                if v.playing ~= v.maxPlayers then
                    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, v.id)
                end
            end
        end
    }
elseif game.PlaceId == ghostworld then
    Other:Button {
        Name = "Serverhop",
        Description = "Serverhop in the same world",
        Callback = function()
            local Servers =
                game.HttpService:JSONDecode(
                game:HttpGet("https://games.roblox.com/v1/games/4078003854/servers/Public?sortOrder=Asc&limit=100")
            )

            for i, v in pairs(Servers.data) do
                if v.playing ~= v.maxPlayers then
                    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, v.id)
                end
            end
        end
    }
elseif game.PlaceId == backdoor then
    Other:Button {
        Name = "Serverhop",
        Description = "Serverhop in the same world",
        Callback = function()
            local Servers =
                game.HttpService:JSONDecode(
                game:HttpGet("https://games.roblox.com/v1/games/4383092793/servers/Public?sortOrder=Asc&limit=100")
            )

            for i, v in pairs(Servers.data) do
                if v.playing ~= v.maxPlayers then
                    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, v.id)
                end
            end
        end
    }
elseif game.PlaceId == bloxbyte then
    Other:Button {
        Name = "Serverhop",
        Description = "Serverhop in the same world",
        Callback = function()
            local Servers =
                game.HttpService:JSONDecode(
                game:HttpGet("https://games.roblox.com/v1/games/5061426732/servers/Public?sortOrder=Asc&limit=100")
            )

            for i, v in pairs(Servers.data) do
                if v.playing ~= v.maxPlayers then
                    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, v.id)
                end
            end
        end
    }
elseif game.PlaceId == thevoid then
    Other:Button {
        Name = "Serverhop",
        Description = "Serverhop in the same world",
        Callback = function()
            local Servers =
                game.HttpService:JSONDecode(
                game:HttpGet("https://games.roblox.com/v1/games/6036368776/servers/Public?sortOrder=Asc&limit=100")
            )

            for i, v in pairs(Servers.data) do
                if v.playing ~= v.maxPlayers then
                    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, v.id)
                end
            end
        end
    }
elseif game.PlaceId == remnant then
    Other:Button {
        Name = "Serverhop",
        Description = "Serverhop in the same world",
        Callback = function()
            local Servers =
                game.HttpService:JSONDecode(
                game:HttpGet("https://games.roblox.com/v1/games/10252702151/servers/Public?sortOrder=Asc&limit=100")
            )

            for i, v in pairs(Servers.data) do
                if v.playing ~= v.maxPlayers then
                    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, v.id)
                end
            end
        end
    }
elseif game.PlaceId == event then
    Other:Button {
        Name = "Serverhop",
        Description = "Serverhop in the same world",
        Callback = function()
            local Servers =
                game.HttpService:JSONDecode(
                game:HttpGet("https://games.roblox.com/v1/games/7780343561/servers/Public?sortOrder=Asc&limit=100")
            )

            for i, v in pairs(Servers.data) do
                if v.playing ~= v.maxPlayers then
                    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, v.id)
                end
            end
        end
    }
end

if game.PlaceId == mainhub then
    Other:Button {
        Name = "Quick Win Race",
        Description = "Click to Tween",
        Callback = function()
            local lp = game.Players.LocalPlayer
            local char = lp.Character
            function bypassTP(cf, time)
                local hrp = char.PrimaryPart
                local ts = game:GetService("TweenService")
                ts:Create(
                    hrp,
                    TweenInfo.new(time, Enum["EasingStyle"].Linear),
                    {
                        CFrame = cf
                    }
                ):Play()
            end

            bypassTP(CFrame.new(5330, -160, 1091), 14)

            GUI:Notification {
                Title = "Alert",
                Text = "Tweening...",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

Quest:Button {
    Name = "Teleport to Holes & Items",
    Description = "Teleports you to Holes & Items",
    Callback = function()
        for _, v in pairs(game.Workspace.ScriptParts.FindParts:GetChildren()) do
            if v.ClassName == "Part" then
                game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
                wait(0.2)
            end
        end

        GUI:Notification {
            Title = "Alert",
            Text = "Succesfully Teleported",
            Duration = 3,
            Callback = function()
            end
        }
    end
}

--MAINHUB
--MAINHUB
--MAINHUB
--MAINHUB

local areatp = GUI:Tab{
	Name = "Area TP",
	Icon = "rbxassetid://8569322835"
}

if game.PlaceId == mainhub then
    areatp:Button {
        Name = "Lab / Forest",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(187, -148, -1711)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == mainhub then
    areatp:Button {
        Name = "Blox City (1st Route)",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(20, -160, -1487)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == mainhub then
    areatp:Button {
        Name = "Junk yard",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-295, -105, -1420)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == mainhub then
    areatp:Button {
        Name = "Sewer",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-406, -193, -1467)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == mainhub then
    areatp:Button {
        Name = "Construction Site",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-97, -54, -1404)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == mainhub then
    areatp:Button {
        Name = "Wild West (2nd Route)",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-321, -161, -1778)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == mainhub then
    areatp:Button {
        Name = "Area 51",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-268, -194, -1755)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == mainhub then
    areatp:Button {
        Name = "Mine",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2, -202, -1781)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == mainhub then
    areatp:Button {
        Name = "Pyramid",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-362, -106, -1704)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == mainhub then
    areatp:Button {
        Name = "Beach (3rd Route)",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(14, -102, -2028)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == mainhub then
    areatp:Button {
        Name = "Underwater",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(349, -248, -2036)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == mainhub then
    areatp:Button {
        Name = "Volcano",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(32, -94, -2277)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == mainhub then
    areatp:Button {
        Name = "Ice Cave",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(188, -187, -2205)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

--GHOST WORLD

--GHOST WORLD

--GHOST WORLD

--GHOST WORLD

--GHOST WORLD

--GHOST WORLD

--GHOST WORLD

--GHOST WORLD

--GHOST WORLD

--GHOST WORLD

--GHOST WORLD

--GHOST WORLD



if game.PlaceId == ghostworld then
    areatp:Button {
        Name = "Main Island",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                162.20665,
                -861.081543,
                5940.02588,
                0.960165024,
                2.1741462e-09,
                -0.279433548,
                -7.80009446e-10,
                1,
                5.10034814e-09,
                0.279433548,
                -4.67921524e-09,
                0.960165024
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == ghostworld then
    areatp:Button {
        Name = "1st Ghost Island",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                184.030945,
                -868.786682,
                5739.20361,
                0.561935246,
                -3.91655375e-09,
                0.82718122,
                1.30225937e-08,
                1,
                -4.11191703e-09,
                -0.82718122,
                1.30826763e-08,
                0.561935246
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == ghostworld then
    areatp:Button {
        Name = "2nd Ghost Island",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                393.165863,
                -900.79718,
                6030.74561,
                -0.752194285,
                -3.68587065e-14,
                0.658941388,
                1.2725009e-14,
                1,
                7.04620891e-14,
                -0.658941388,
                6.13862192e-14,
                -0.752194285
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == ghostworld then
    areatp:Button {
        Name = "3rd Ghost Island",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                -232.065262,
                -970.279602,
                5678.13086,
                -0.0421274006,
                -7.0883587e-08,
                0.999112248,
                3.44692541e-09,
                1,
                7.10919039e-08,
                -0.999112248,
                6.43878284e-09,
                -0.0421274006
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == ghostworld then
    areatp:Button {
        Name = "Castle Courtyard Bottom",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                418.468262,
                -863.038574,
                5576.84863,
                0.766360998,
                5.46923218e-08,
                -0.642410159,
                -3.6156468e-08,
                1,
                4.20034034e-08,
                0.642410159,
                -8.96248853e-09,
                0.766360998
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == ghostworld then
    areatp:Button {
        Name = "Castle Courtyard Top",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                477.406219,
                -788.870789,
                5509.08203,
                0.505998552,
                -0.849430501,
                -0.149777368,
                -1.58760258e-08,
                0.173648,
                -0.984807789,
                0.862534344,
                0.498311311,
                0.0878656283
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == ghostworld then
    areatp:Button {
        Name = "Music Meadows",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                -180.268661,
                -670.95575,
                6302.5459,
                0.943858862,
                2.47896477e-08,
                -0.330348998,
                -5.93836003e-09,
                1,
                5.80739581e-08,
                0.330348998,
                -5.28518882e-08,
                0.943858862
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == ghostworld then
    areatp:Button {
        Name = "Haunted Castle",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                563.176453,
                -862.984436,
                5416.31152,
                0.679700375,
                -1.85214084e-08,
                -0.733489871,
                -8.41815684e-09,
                1,
                -3.30518972e-08,
                0.733489871,
                2.86400201e-08,
                0.679700375
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == ghostworld then
    areatp:Button {
        Name = "Boss waiting area",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                791.851807,
                -815.009766,
                5159.9126,
                -0.67943871,
                2.99087084e-08,
                0.733732283,
                3.88706312e-09,
                1,
                -3.71629945e-08,
                -0.733732283,
                -2.23979129e-08,
                -0.67943871
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

-- Back door

-- Back door

-- Back door

-- Back door

-- Back door

-- Back door

-- Back door



if game.PlaceId == backdoor then
    areatp:Button {
        Name = "Lab / Swamplands",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                113.027985,
                278.488953,
                -713.439697,
                0.836869419,
                6.55794281e-08,
                -0.547402561,
                -1.01809455e-07,
                1,
                -3.58452645e-08,
                0.547402561,
                8.57285585e-08,
                0.836869419
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == backdoor then
    areatp:Button {
        Name = "Winter tundra (1st Route)",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                -235.786774,
                270.418457,
                -604.228088,
                -0.425187469,
                -3.95093069e-09,
                0.905105293,
                8.42748875e-08,
                1,
                4.39546177e-08,
                -0.905105293,
                9.49666017e-08,
                -0.425187469
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == backdoor then
    areatp:Button {
        Name = "Mushroom forest",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                -216.0345,
                370.710968,
                -391.200409,
                -0.976265192,
                0,
                -0.216580123,
                0,
                1,
                0,
                0.216580123,
                0,
                -0.976265192
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end
if game.PlaceId == backdoor then
    areatp:Button {
        Name = "Twisting River",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                -96.188179,
                370.019775,
                -153.197449,
                -0.595394373,
                0,
                -0.803433537,
                0,
                1,
                0,
                0.803433537,
                0,
                -0.595394373
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == backdoor then
    areatp:Button {
        Name = "Crystal Cave",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                -404.154816,
                268.491577,
                -700.607117,
                0.840039134,
                -7.39453165e-10,
                -0.542525828,
                -7.53869589e-09,
                1,
                -1.30357902e-08,
                0.542525828,
                1.50405111e-08,
                0.840039134
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == backdoor then
    areatp:Button {
        Name = "Farm (2nd Route)",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                66.1319275,
                268.44516,
                -487.690308,
                -0.997062981,
                5.94353828e-08,
                0.0765858963,
                6.05335657e-08,
                1,
                1.2017801e-08,
                -0.0765858963,
                1.66185217e-08,
                -0.997062981
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == backdoor then
    areatp:Button {
        Name = "Spaceship",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                417.469879,
                477.755157,
                -231.393723,
                -0.702346623,
                0.0594745353,
                0.709346175,
                -1.08096225e-08,
                0.996503472,
                -0.083551012,
                -0.711835086,
                -0.0586817786,
                -0.699890852
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == backdoor then
    areatp:Button {
        Name = "Barn",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                327.496094,
                310.542999,
                -374.598969,
                0.98543781,
                0,
                0.170036227,
                0,
                1,
                0,
                -0.170036227,
                0,
                0.98543781
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == backdoor then
    areatp:Button {
        Name = "Beehive",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                -60.3063965,
                228.86763,
                -351.99408,
                -0.261220664,
                9.07632227e-08,
                0.965279102,
                1.75446715e-08,
                1,
                -8.92800784e-08,
                -0.965279102,
                -6.38629594e-09,
                -0.261220664
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == backdoor then
    areatp:Button {
        Name = "Data Stream (3rd Route)",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                182.912308,
                277.076538,
                -560.885254,
                -0.29242146,
                -1.05078705e-07,
                -0.95628953,
                -7.68835307e-08,
                1,
                -8.63716565e-08,
                0.95628953,
                4.82659885e-08,
                -0.29242146
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == backdoor then
    areatp:Button {
        Name = "Reverse City",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                497.461731,
                277.315582,
                -641.176575,
                0.382687271,
                -2.04372821e-08,
                -0.923877954,
                -4.46997328e-09,
                1,
                -2.39727385e-08,
                0.923877954,
                1.33037714e-08,
                0.382687271
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == backdoor then
    areatp:Button {
        Name = "Bloxbyte HQ",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                712.698792,
                277.78421,
                -720.997864,
                0.382687271,
                -8.0391791e-09,
                -0.923877954,
                -4.81024571e-08,
                1,
                -2.86264825e-08,
                0.923877954,
                5.53957911e-08,
                0.382687271
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == backdoor then
    areatp:Button {
        Name = "Agents HQ",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                704.231506,
                242.613129,
                -343.685333,
                0.217334509,
                3.10773061e-08,
                0.976097167,
                -1.06082316e-08,
                1,
                -2.94763396e-08,
                -0.976097167,
                -3.94843891e-09,
                0.217334509
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end


if game.PlaceId == remnant then
    areatp:Button {
        Name = "Lab / Enchanted Jungle",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                245.365768,
                152.671249,
                -75.2479858,
                -0.739510238,
                7.03529039e-08,
                0.673145294,
                3.19752118e-08,
                1,
                -6.93860684e-08,
                -0.673145294,
                -2.97877474e-08,
                -0.739510238
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == remnant then
    areatp:Button {
        Name = "Blue Forest(1st Route)",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                461.681793,
                123.695702,
                441.360321,
                -0.962378025,
                -7.23076488e-09,
                0.271714032,
                1.26689335e-08,
                1,
                7.14834911e-08,
                -0.271714032,
                7.22364675e-08,
                -0.962378025
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == remnant then
    areatp:Button {
        Name = "Crystal Canyon",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                332.276215,
                122.180054,
                744.086243,
                -0.605624914,
                -6.14899491e-08,
                0.79575026,
                2.94963232e-09,
                1,
                7.95178181e-08,
                -0.79575026,
                5.05051432e-08,
                -0.605624914
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == remnant then
    areatp:Button {
        Name = "Floating Bridge",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                -24.5415325,
                196.206589,
                680.322327,
                -0.47257477,
                -1.10357718e-07,
                0.881290555,
                -4.65043293e-08,
                1,
                1.00285817e-07,
                -0.881290555,
                6.40872022e-09,
                -0.47257477
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == remnant then
    areatp:Button {
        Name = "Wonder House",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(
                5385.63037,
                45.931488,
                -123.168732,
                -0.999065995,
                -0.0265014321,
                0.0341298468,
                -4.14761558e-09,
                0.789845526,
                0.613305807,
                -0.0432107896,
                0.612732947,
                -0.7891078
            )

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == remnant then
    areatp:Button {
        Name = "Scrap City(2nd Route)",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-364, 96, 117)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == remnant then
    areatp:Button {
        Name = "Underwater Ruins",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-533, 35, -54)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == remnant then
    areatp:Button {
        Name = "Hidden Cavern",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-460, 71, -505)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

if game.PlaceId == remnant then
    areatp:Button {
        Name = "Tree Tops",
        Description = "Click to teleport",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-671, 348, 85)

            GUI:Notification {
                Title = "Alert",
                Text = "Succesfully Teleported!",
                Duration = 1,
                Callback = function()
                end
            }
        end
    }
end

Player:Button {
    Name = "Note",
    Description = nil,
    Callback = function()
        GUI:Notification {
            Title = "Alert",
            Text = "Make sure to drag both sliders to avoid bug",
            Duration = 2,
            Callback = function()
            end
        }
    end
}

Player:Slider {
    Name = "BoardSpeed",
    Description = "Drag To change your hoverboard speed",
    Default = shared.boardspeed,
    Min = 1,
    Max = 100,
    Callback = function(s)
        shared.boardspeed = s
        SaveSettings()
    end
}

local plr = game:GetService("Players")
local lplr = game.Players.LocalPlayer

spawn(
    function()
        while task.wait() do
            if game.Players.LocalPlayer.Stats and shared.boardspeed then
                pcall(
                    function()
                        game.Players.LocalPlayer.Stats.BoardSpeed.Value = shared.boardspeed
                    end
                )
            end
        end
    end
)

Player:Slider {
    Name = "WalkSpeed",
    Description = "Drag To change your walk speed",
    Default = shared.walkspeed,
    Min = 16,
    Max = 500,
    Callback = function(s)
        shared.walkspeed = s
        SaveSettings()
    end
}

local plr2 = game:GetService("Players")
local lplr2 = plr2.LocalPlayer

spawn(
    function()
        while task.wait() do
            if lplr2.Character and shared.walkspeed then
                pcall(
                    function()
                        lplr2.Character.Humanoid.WalkSpeed = shared.walkspeed
                    end
                )
            end
        end
    end
)

Player:Slider {
    Name = "Jump Power",
    Description = "Drag To change your jump power",
    Default = shared.jumppower,
    Min = 16,
    Max = 500,
    Callback = function(s)
        shared.jumppower = s
        SaveSettings()
    end
}

local plr2 = game:GetService("Players")
local lplr2 = plr2.LocalPlayer

spawn(
    function()
        while task.wait() do
            if lplr2.Character and shared.walkspeed then
                pcall(
                    function()
                        player.Stats.JumpPower.Value = shared.walkspeed
                    end
                )
            end
        end
    end
)

--PLACE TELEPORTS--

--PLACE TELEPORTS--

--PLACE TELEPORTS--

--PLACE TELEPORTS--

PlaceTeleporter:Button {
    Name = "Main Hub",
    Description = "Click to Teleport To Main hub",
    Callback = function()
        local A_1 = "MainHub"
        local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.TransportToPlace
        Event:FireServer(A_1)
    end
}

PlaceTeleporter:Button {
    Name = "Ghost World",
    Description = "Click to Teleport To Ghost World",
    Callback = function()
        local A_1 = "GhostWorld"
        local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.TransportToPlace
        Event:FireServer(A_1)
    end
}

PlaceTeleporter:Button {
    Name = "Backdoor",
    Description = "Click to Teleport To Backdoor",
    Callback = function()
        local A_1 = "Backdoor"
        local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.TransportToPlace
        Event:FireServer(A_1)
    end
}

PlaceTeleporter:Button {
    Name = "Bloxbyte HQ",
    Description = "Click to Teleport To Bloxbyte HQ",
    Callback = function()
        local A_1 = "BloxByteHQ"
        local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.TransportToPlace
        Event:FireServer(A_1)
    end
}

PlaceTeleporter:Button {
    Name = "The Void",
    Description = "Click to Teleport To The Void",
    Callback = function()
        local A_1 = "Void"
        local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.TransportToPlace
        Event:FireServer(A_1)
    end
}

PlaceTeleporter:Button {
    Name = "Remnant Zone",
    Description = "Click to Teleport To Remnant Zone",
    Callback = function()
        local A_1 = "RemnantZone"
        local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.TransportToPlace
        Event:FireServer(A_1)
    end
}

PlaceTeleporter:Button {
    Name = "Event Place",
    Description = "Click to Teleport To Event",
    Callback = function()
        local A_1 = "Event"
        local Event = game:GetService("ReplicatedStorage").Network.ToServer.Requests.TransportToPlace
        Event:FireServer(A_1)
    end
}

Other:Credit {
    Name = "Join discord?",
    Description = "Click on the discord logo to copy our server invite. ---------------------------------------->",
    V3rm = nil,
    Discord = "https://discord.gg/tbENWKpgku"
}


syn.queue_on_teleport([[
    loadstring(game:HttpGet("https://raw.githubusercontent.com/x3fall3nangel/FallAngelHub/main/Main.lua"))()
]])


-- local mainhub = 2685347741

-- local ghostworld = 4078003854

-- local backdoor = 4383092793

-- local bloxbyte = 5061426732

-- local thevoid = 6036368776

-- local remnant = 10252702151